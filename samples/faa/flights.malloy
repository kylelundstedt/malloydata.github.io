--! styles flights.styles.json

export define airports is (explore 'malloy-data.faa.airports'
  primary key code
  name is concat(code, ' - ', full_name)
  airport_count is count()
);

define carriers is (explore 'malloy-data.faa.carriers'
  primary key code
  carrier_count is count()
);

define aircraft_models is (explore 'malloy-data.faa.aircraft_models'
  primary key aircraft_model_code
  aircraft_model_count is count()
);

define aircraft is (explore 'malloy-data.faa.aircraft'
  primary key tail_num
  aircraft_count is count()
  -- joins
  aircraft_models is join on aircraft_model_code
);

export define flights is (explore 'malloy-data.faa.flights'
  primary key id2
  -- rename some fields
  origin_code renames origin
  destination_code renames destination

  -- joins
  carriers is join on carrier
  origin is join airports on origin_code
  destination is join airports on destination_code,
  aircraft is join on tail_num

  -- measures
  flight_count is count()
  total_distance is sum(distance)
  seats_for_sale is sum(aircraft.aircraft_models.seats)
  seats_owned is aircraft.sum(aircraft.aircraft_models.seats)
  -- average_seats is aircraft.aircraft_models.avg(aircraft.aircraft_models.seats)
  -- average_seats is aircraft.aircraft_models.seats.avg()

  -- queries
  measures is (reduce
    flight_count
    aircraft.aircraft_count
    dest_count is destination.airport_count
    origin_count is origin.airport_count
  )

  -- shows carriers and number of destinations (bar chart)
  by_carrier is (reduce
    carriers.nickname
    flight_count
    destination_count is destination.count()
  )

  -- shows year over year growth (line chart)
  year_over_year is (reduce
    dep_month is month(dep_time)
    flight_count
    dep_year is dep_time.year
  )

  -- shows plane manufacturers and frequency of use
  by_manufacturer is (reduce top 5
    aircraft.aircraft_models.manufacturer
    aircraft.aircraft_count
    flight_count
  )

  delay_by_hour_of_day is (reduce : [dep_delay >30]
    dep_hour is hour(dep_time)
    flight_count
    delay is FLOOR(dep_delay)/30 * 30
  )

  carriers_by_month is (reduce
    dep_month is dep_time.month
    flight_count
    carriers.nickname
  )

  seats_by_distance is (reduce
    -- seats rounded to 5
    seats is floor(aircraft.aircraft_models.seats/5)*5
    flight_count
    -- distance rounded to 20
    distance is floor(distance/20)*20
  )

  routes_map is (reduce
    origin.latitude
    origin.longitude
    latitude2 is destination.latitude
    longitude2 is destination.longitude
    flight_count
  )

  destinations_by_month is (reduce
    dep_time.`month`
    flight_count
    destination.name
  )


  -- by_dest is (reduce
  --   destination_code
  --   flight_count
    x_vega_spec is (reduce top 10
      carriers.nickname
      flight_count
      aircraft.aircraft_count
    )

    bar_SMS_vega_spec is (reduce : [origin.state: 'CA'|'TX'|'NY']
      carriers.nickname
      flight_count
      origin.state
    )

    trellis is (reduce : [
        origin.state: 'CA'|'TX'|'NY',
        carrier: 'WN'|'DL'|'UA'|'AA'|'B8'
      ]
      dep_year is dep_time.year
      bar_SSMMM_vega_spec  is (reduce
        carriers.nickname
        origin.state
        flight_count
        aircraft.aircraft_count
        total_distance
      )
    )


    year_bubble is (reduce : [origin_code: 'MRY']
      dep_year is dep_time.year
      bubble_DDM_vega_spec is (reduce
        month_num is dep_time.month_of_year
        dep_year is dep_time.day_of_month
        flight_count
      )
    )

  -- )
  -- explore flights : [origin.code : 'SJC'] | airport_dashboard
  airport_dashboard is ( reduce top 10
    code is destination_code
    destination is destination.full_name
    flight_count
    x_vega_spec
    carriers_by_month
    routes_map
    delay_by_hour_of_day
  )

  -- explore flights : [carriers.nickname : 'Southwest'] | carrier_dashboard
  carrier_dashboard is ( reduce
    destination_count is destination.airport_count
    flight_count
    by_manufacturer
    by_month is (reduce
      dep_month is dep_time.month
      flight_count
    )
    hubs is (reduce : [destination.airport_count > 1] top 10
      hub is origin.name
      destination_count is destination.airport_count
    )
    origin_dashboard is (reduce top 10
      code is origin_code
      origin is origin.full_name
      origin.city
      flight_count
      destinations_by_month
      routes_map
      year_over_year
    )
  )

  detail is (project top 30 order by 2
    id2, dep_time, tail_num, carrier, origin_code, destination_code, distance
    aircraft.aircraft_model_code
  )

  -- query that you might run for to build a flight search interface
  --   explore flights : [origin.code: 'SJC', destination.code:'LAX'|'BUR', dep_time: @2004-01-01] | kayak
  kayak is (reduce
    carriers is (reduce
      carriers.nickname
      flight_count
    )
    by_hour is (reduce order by 1
      dep_hour is hour(dep_time)
      flight_count
    )
    flights is (reduce
      dep_minute is dep_time.minute
      carriers.name
      flight_num
      origin_code
      destination_code
      aircraft.aircraft_models.manufacturer
      aircraft.aircraft_models.model
    )
  )

  -- example query that shows how you can build a map reduce job to sessionize flights
  sessionize is (reduce
    flight_date is dep_time.`date`
    carrier
    daily_flight_count is flight_count
    per_plane_data is (reduce top 20
      tail_num
      plane_flight_count is flight_count
      flight_legs is (reduce order by 2
        tail_num
        dep_minute is dep_time.minute
        origin_code
        destination_code
        dep_delay
        arr_delay
        )
    )
  )

  search_index is (index : [dep_time: @2004-01]
    *, carriers.*,
    origin.code, origin.state, origin.city, origin.full_name, origin.fac_type
    destination.code, destination.state, destination.city, destination.full_name
    aircraft.aircraft_model_code, aircraft.aircraft_models.manufacturer
    aircraft.aircraft_models.model
    on flight_count
  )


);

-- once we have imports, this code will be in its own file..

define sessionize_delta_southwest is (
  flights |
  sessionize : [carrier:'WN' | 'DL', dep_time: @2002-03-03]
);

define sessionize_american_united is (
  flights |
  sessionize : [carrier:'AA' | 'UA', dep_time: @2002-03-03]
);

define kayak_query is (
  flights |
  kayak : [
    origin.code: 'SJC',
    destination.code:'LAX'|'BUR',
    dep_time: @2004-01-01
    ]
);

define southwest_dashboard is (
  flights |
  carrier_dashboard : [carriers.nickname: 'Southwest']
);

define jetblue_dashboard is (
  flights |
  carrier_dashboard : [carriers.nickname: 'Jetblue']
);

sjc_dashboard is (
  flights |
  airport_dashboard : [origin.code: 'SJC']
);

sfo_dashboard is (
  flights |
  airport_dashboard : [origin.code: 'SFO']
);
