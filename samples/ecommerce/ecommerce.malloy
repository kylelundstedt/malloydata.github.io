--! styles ecommerce.styles.json

define users is (explore 'malloy-data.ecomm.users'
  primary key id
  user_count is count()
);

define product is (explore 'malloy-data.ecomm.products'
  primary key id
  product_count is count()
);

define ii is (explore 'malloy-data.ecomm.inventory_items'
  primary key id
  item_count is count(distinct id)
  total_cost is sum(cost)
  joins
    product on product_id
);

define user_order_facts is (
  'malloy-data.ecomm.order_items' |
  reduce
    user_id
    lifetime_orders is count()
);

define order_items_base is (explore 'malloy-data.ecomm.order_items'
  primary key id

  -- joins
  users is join on user_id,
  ii is join on inventory_item_id,
  user_order_facts is join on user_id

  -- measures
  order_count is count(distinct order_id)
  item_count is count(*)
  total_sales is sale_price.sum()
);

--brand synergy / affinity analysis; extends base order_items
export define brand_synergy is (
  order_items_base
  | reduce
    order_id
    brand1 is (reduce
      ii.product.brand
    )
    brand2 is (reduce
      ii.product.brand
    )
  | project : [brand1.brand != brand2.brand]
    order_id
    brand1 is brand1.brand
    brand2 is brand2.brand
  | reduce
    brand1
    brand2
    occurances is count()
  | reduce
    brand is brand1
    synergies is (project top 5 order by occurances desc
      brand is brand2
      occurances
    )
);

-- order_items with brand_synergy as well as base definitions.
export define order_items is (explore order_items_base
  brand_synergy is join on ii.product.brand

  -- turtles
  top_brands is (reduce top 5
    ii.product.brand
    total_sales
    ii.product.product_count
  )
  top_products is (reduce top 5
    ii.product.name
    total_sales
  )
  by_year is (reduce
    created_year is created_at.year
    total_sales
  )
  by_month is (reduce
    created_month is created_at.month
    total_sales
  )

  sales_by_state_2020 is (reduce: [created_at: @2020]
    users.state
    total_sales
  )

  sales_by_month_2020 is (reduce : [created_at : @2020]
   order_month is created_at.month
   total_sales
 )

  orders_by_status is (reduce
    status
    order_count is count(distinct order_id)
  )

  order_by_category_and_day is (reduce
    created_month is created_at.month
    order_count
    ii.product.category
  )

  brand_dashboard is (reduce top 10
    ii.product.brand
    total_sales
    order_count
    item_count
    ii.product.product_count
    top_products
    by_month
    synergistic_brands is (reduce
      brand_synergy.synergies.brand
      occurances is brand_synergy.synergies.occurances.sum()
    )
  )
);
